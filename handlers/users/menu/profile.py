from aiogram import types
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton

from loader import dp, _, db


@dp.message_handler(text=["üë§–ü—Ä–æ—Ñ–∏–ª—å", "üë§Profile", "üë§–ü—Ä–æ—Ñ—ñ–ª—å"])
async def get_profile_info(message: types.Message):
    profileBtn = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=_('üë§–õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ'), callback_data='personal_data'),
             InlineKeyboardButton(text=_('üìú–ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫—É–ø–æ–∫'), callback_data='purchase_history')]
        ]
    )

    text = _("–†–∞–∑–¥–µ–ª *–ü—Ä–æ—Ñ–∏–ª—å* \n"
             "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ –∏ –∏—Å—Ç–æ—Ä–∏—é –≤–∞—à–∏—Ö –ø–æ–∫—É–ø–æ–∫")
    await message.answer(text, reply_markup=profileBtn, parse_mode="Markdown")


@dp.callback_query_handler(text_contains="personal_data")
async def get_personal_data(call: CallbackQuery):
    data = await db.get_user(call.message.chat.id)

    username = data[2]
    full_name = data[3]
    registrationDate = data[-1].strftime("%d-%m-%Y")

    text = _("üë§<b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:</b>\n\n") + \
           _("–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ") + " <i>" + username + "</i>\n" + \
           _("–ò–º—è: ") + " <i>" + full_name + "</i>\n" + \
           _("–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ") + "<i>" + registrationDate + "</i>"

    await call.message.edit_text(text, parse_mode="HTML", reply_markup=None)


@dp.callback_query_handler(text="purchase_history")
async def get_purchase_history(call: CallbackQuery):
    await call.message.edit_text(_("üì¶*–í–∞—à–∞ –∏—Å—Ç–æ—Ä–∏—è –ø–æ–∫—É–ø–æ–∫:*"), parse_mode="Markdown")

    purchaseHistory = await db.get_purchase_history(call.message.chat.id)

    if not purchaseHistory:
        return await call.message.answer(_("üî¥–£ –≤–∞—Å –Ω–µ—Ç —Å–æ–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫, –∏–ª–∏ –∫—É–ø–ª–µ–Ω–Ω—ã–π –≤–∞–º–∏ –ø—Ä–æ–¥—É–∫—Ç —É–¥–∞–ª–∏–ª–∏"))

    for product in purchaseHistory:
        text = _("üìÉ<b>–¢–æ–≤–∞—Ä:</b> ") + " <i>" + product[1] + "</i>\n" + \
               _("üí∞<b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b> ") + " <i>" + str(product[-1]) + "</i>\n" + \
               _("üìÖ<b>–î–∞—Ç–∞ –ø–æ–∫—É–ø–∫–∏:</b> ") + " <i>" + product[0].strftime("%d-%m-%Y %H:%M") + "</i>"

        await call.message.answer_photo(photo=product[2], caption=text, parse_mode="HTML")
